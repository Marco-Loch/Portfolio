/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as Privacy_policyRouteImport } from './routes/privacy_policy'
import { Route as ImpressumRouteImport } from './routes/impressum'
import { Route as IndexRouteImport } from './routes/index'

const Privacy_policyRoute = Privacy_policyRouteImport.update({
  id: '/privacy_policy',
  path: '/privacy_policy',
  getParentRoute: () => rootRouteImport,
} as any)
const ImpressumRoute = ImpressumRouteImport.update({
  id: '/impressum',
  path: '/impressum',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/impressum': typeof ImpressumRoute
  '/privacy_policy': typeof Privacy_policyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/impressum': typeof ImpressumRoute
  '/privacy_policy': typeof Privacy_policyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/impressum': typeof ImpressumRoute
  '/privacy_policy': typeof Privacy_policyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/impressum' | '/privacy_policy'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/impressum' | '/privacy_policy'
  id: '__root__' | '/' | '/impressum' | '/privacy_policy'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ImpressumRoute: typeof ImpressumRoute
  Privacy_policyRoute: typeof Privacy_policyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/privacy_policy': {
      id: '/privacy_policy'
      path: '/privacy_policy'
      fullPath: '/privacy_policy'
      preLoaderRoute: typeof Privacy_policyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/impressum': {
      id: '/impressum'
      path: '/impressum'
      fullPath: '/impressum'
      preLoaderRoute: typeof ImpressumRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ImpressumRoute: ImpressumRoute,
  Privacy_policyRoute: Privacy_policyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
